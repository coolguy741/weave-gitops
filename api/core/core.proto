syntax = "proto3";

package gitops_core.v1;

option go_package = "github.com/weaveworks/weave-gitops/core/api";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "api/core/types.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Weave GitOps Core API",
      version: "0.1";
      description: "The API handles operations for Weave GitOps Core";
    };
    consumes: "application/json";
    produces: "application/json";
};

service Core {
    // Automations

    /*
     * ListKustomization lists Kustomizations from a cluster via GitOps.
     */
    rpc ListKustomizations(ListKustomizationsRequest) returns (ListKustomizationsResponse) {
        option (google.api.http) = {
            get : "/v1/kustomizations"
        };
    }

    /*
    * GetKustomization gets data about a single Kustomization from a cluster.
    */
    rpc GetKustomization(GetKustomizationRequest) returns (GetKustomizationResponse) {
        option (google.api.http) = {
            get : "/v1/kustomizations/{name}"
        };
    }

    /*
     * ListHelmReleases lists helm releases from a cluster.
     */
    rpc ListHelmReleases(ListHelmReleasesRequest) returns (ListHelmReleasesResponse) {
        option (google.api.http) = {
          get : "/v1/helmreleases"
        };
    }


    /*
     * GetHelmRelease gets data about a single HelmRelease from the cluster.
     */
    rpc GetHelmRelease(GetHelmReleaseRequest) returns (GetHelmReleaseResponse) {
        option (google.api.http) = {
            get : "/v1/helmrelease/{name}"
        };
    }


    // Sources

    /*
     * ListGitRepository lists git repositories objects from a cluster.
     */
    rpc ListGitRepositories(ListGitRepositoriesRequest) returns (ListGitRepositoriesResponse) {
        option (google.api.http) = {
            get : "/v1/gitrepositories"
        };
    }

    /*
     * ListHelmCharts lists helm chart objects from a cluster.
     */
    rpc ListHelmCharts(ListHelmChartsRequest) returns (ListHelmChartsResponse) {
        option (google.api.http) = {
            get : "/v1/helmcharts"
        };
    }
    /*
     * ListHelmRepository lists helm repository objects from a cluster.
     */
    rpc ListHelmRepositories(ListHelmRepositoriesRequest) returns (ListHelmRepositoriesResponse) {
        option (google.api.http) = {
            get : "/v1/helmrepositories"
        };
    }
    /*
     * ListBuckets lists bucket objects from a cluster.
     */
    rpc ListBuckets(ListBucketRequest) returns (ListBucketsResponse) {
        option (google.api.http) = {
            get : "/v1/buckets"
        };
    }

    // Misc
    /*
     * ListFluxRuntimeObjects lists the flux runtime deployments from a cluster.
     */
    rpc ListFluxRuntimeObjects(ListFluxRuntimeObjectsRequest) returns (ListFluxRuntimeObjectsResponse) {
        option (google.api.http) = {
          get : "/v1/flux_runtime_objects"
        };
    }

    /**
    * GetReconciledObjects returns a list of objects that were created as a result a Flux automation.
    * This list is derived by looking at the Kustomization or HelmRelease specified in the request body.
    */
    rpc GetReconciledObjects(GetReconciledObjectsRequest) returns (GetReconciledObjectsResponse) {
        option (google.api.http) = {
            post : "/v1/reconciled_objects"
            body: "*"
        };
    };

    /**
    * GetChildObjects returns the children of a given object, specified by a GroupVersionKind.
    * Not all Kubernets objects have children. For example, a Deployment has a child ReplicaSet, but a Service has no child objects.
    */
    rpc GetChildObjects(GetChildObjectsRequest) returns (GetChildObjectsResponse) {
        option (google.api.http) = {
            post : "/v1/child_objects"
            body: "*"
        };
    };

    /*
     * GetFluxNamespace returns with a namespace with a specific label.
     */
    rpc GetFluxNamespace(GetFluxNamespaceRequest) returns (GetFluxNamespaceResponse) {
        option (google.api.http) = {
            post: "/v1/namespace/flux"
            body: "*"
        };
    }

    /*
     * ListNamespaces returns with the list of available namespaces.
     */
    rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {
        option (google.api.http) = {
            get: "/v1/namespaces"
        };
    }
    /*
     * ListFluxEvents returns with a list of events based on Flux labels
     */
    rpc ListFluxEvents(ListFluxEventsRequest) returns (ListFluxEventsResponse) {
        option (google.api.http) = {
            get: "/v1/events"
        };
    }
}

message ListKustomizationsRequest {
    string namespace = 1;
}

message ListKustomizationsResponse {
    repeated Kustomization kustomizations = 1;
}

message ListHelmReleasesRequest {
    string namespace = 1;
}

message ListHelmReleasesResponse {
    repeated HelmRelease helm_releases = 1;
}

message GetHelmReleaseRequest {
    string name      = 1;
    string namespace = 2;
}

message GetHelmReleaseResponse {
    HelmRelease helm_release = 1;
}

message ListGitRepositoriesRequest {
    string namespace = 1;
}

message ListGitRepositoriesResponse {
    repeated GitRepository git_repositories = 1;
}

message ListHelmRepositoriesRequest {
    string namespace = 1;
}

message ListHelmRepositoriesResponse {
    repeated HelmRepository helm_repositories = 1;
}

message ListBucketRequest {
    string namespace = 1;
}

message ListBucketsResponse {
    repeated Bucket buckets = 1;
}

message ListFluxRuntimeObjectsRequest {
    string namespace = 1;
}

message ListFluxRuntimeObjectsResponse {
    repeated Deployment deployments = 1;
}

message ListHelmChartsRequest {
    string namespace = 1;
}

message ListHelmChartsResponse {
    repeated HelmChart helm_charts = 1;
}

message GetKustomizationRequest {
    string name      = 1;
    string namespace = 2;
}

message GetKustomizationResponse {
    Kustomization kustomization = 1;
}

message GetReconciledObjectsRequest {
    string         automationName         = 1;
    string         namespace              = 2;
    AutomationKind automationKind         = 3;
    repeated       GroupVersionKind kinds = 4;
}

message GetReconciledObjectsResponse {
    repeated UnstructuredObject objects = 1;
}

message GetChildObjectsRequest {
    GroupVersionKind groupVersionKind = 1;
    string           namespace        = 2;
    string           parentUid        = 3;
}

message GetChildObjectsResponse {
    repeated UnstructuredObject objects = 1;
}

message GetFluxNamespaceRequest {}

message GetFluxNamespaceResponse {
  string name = 1;
}

message ListNamespacesRequest {}

message ListNamespacesResponse {
  repeated Namespace namespaces = 1;
}

message ListFluxEventsRequest {
    string          namespace      = 1;
    ObjectReference involvedObject = 2;
}

message ListFluxEventsResponse {
    repeated Event events = 1;
}
