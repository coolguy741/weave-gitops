on:
  schedule:
    - cron: '8 0 * * *'

name: Nightly
jobs:
  lint:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install UI Deps
      run: npm ci
    - name: Build UI Assets
      run: make cmd/ui/dist/main.js
    - name: Fake Install flux
      run: mkdir -p pkg/flux/bin && touch pkg/flux/bin/flux
    - name: Run linters
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29
        args: --build-tags acceptance

  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: build
      run: make all BINARY_NAME=wego-${{matrix.os}}-nightly
    - name: Store wego binaries
      uses: actions/upload-artifact@v2
      with:
          name: wego-binaries-${{matrix.os}}-nightly
          path: bin
          retention-days: 1
  test-eks:
    needs: [lint, build]
    runs-on: ${{matrix.os}}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: checkout
      uses: actions/checkout@v2
    - name: setup aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Install eksctl
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        eksctl get clusters
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
      with:
          version: 'v1.19.6'
    - name: setup eks cluster
      run: |
        export CLUSTER_NAME=wego-nightly-cluster-${{matrix.os}}
        export CLUSTER_VERSION=1.19
        export CLUSTER_REGION=us-east-1
        export CLUSTER_EXISTS=$(eksctl get clusters --region $CLUSTER_REGION | grep $CLUSTER_NAME)
        if [ -z $CLUSTER_EXISTS ]
        then
          eksctl create cluster --name=$CLUSTER_NAME --version=$CLUSTER_VERSION--region=$CLUSTER_REGION
        fi
        eksctl utils write-kubeconfig --region=$CLUSTER_REGION --cluster=$CLUSTER_NAME --kubeconfig=$HOME/.kube/config
        ls -la $HOME/.kube
        kubectl get nodes -A
        kubectl get all --all-namespaces -o wide
      if: always()
    - name: Fake Install flux
      run: mkdir -p pkg/flux/bin && touch pkg/flux/bin/flux
    - name: Download wego binaries
      uses: actions/download-artifact@v2
      with:
        name: wego-binaries-${{matrix.os}}-nightly
        path: bin
    - name: Change bin permissions
      run: |
        chmod +x bin/wego-${{matrix.os}}-nightly
        ls -la bin
    - name: Set up ssh agent
      uses: webfactory/ssh-agent@v0.5.2
      with:
        ssh-private-key: ${{ secrets.WKP_EXAMPLE_ORG_SSH_KEY }}
    - name: Configure git settings
      run: |
        git config --global init.defaultBranch main
        git config --global user.email "test-user@weave.works"
        git config --global user.name "Testy McTestFace"
        git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    - name: Install Ginkgo binary
      run: go get -u github.com/onsi/ginkgo/ginkgo
    - name: User Acceptance Tests (Ubuntu)
      env:
        GITHUB_ORG: wkp-example-org
        GITHUB_TOKEN: "${{ secrets.WKP_EXAMPLE_ORG_KEY }}"
        GITHUB_KEY: "${{ secrets.WKP_EXAMPLE_ORG_SSH_KEY }}"
      run: |
        export WEGO_BIN_PATH=$(pwd)/bin/wego-${{matrix.os}}-nightly
        export CLUSTER_PROVIDER=eks
        export K8S_VERSION=1.19.1
        # cleanup the cluster
        $WEGO_BIN_PATH install | kubectl --ignore-not-found=true delete -f -
        $WEGO_BIN_PATH install --namespace test-namespace| kubectl --ignore-not-found=true delete -f -
        kubectl get all --all-namespaces -o wide
        ginkgo --reportFile=$(pwd)/test-results/acceptance-test-results.xml -v -tags=acceptance ./test/acceptance/test/...

  test-gke:
    needs: [lint, build]
    runs-on: ${{matrix.os}}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: checkout
      uses: actions/checkout@v2
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: Use gcloud CLI
      run: | 
        gcloud info
        gcloud container clusters list
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
      with:
          version: 'v1.19.6'
    - name: setup gke cluster
      run: |
        CLUSTER_NAME=wego-nightly-cluster-${{matrix.os}}
        export CLUSTER_NAME=$(echo "$CLUSTER_NAME" | tr '[:upper:]' '[:lower:]')
        export CLUSTER_VERSION=1.19
        export CLUSTER_REGION=us-central1-a
        export CLUSTER_EXISTS=$(gcloud container clusters list | grep $CLUSTER_NAME)
        if [ -z $CLUSTER_EXISTS ]
        then
          gcloud container clusters create $CLUSTER_NAME --cluster-version=$CLUSTER_VERSION --zone $CLUSTER_REGION
        fi
        gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_REGION
        ls -la $HOME/.kube
        kubectl get nodes -A
        kubectl get all --all-namespaces -o wide
      if: always()
    - name: Fake Install flux
      run: mkdir -p pkg/flux/bin && touch pkg/flux/bin/flux
    - name: Download wego binaries
      uses: actions/download-artifact@v2
      with:
        name: wego-binaries-${{matrix.os}}-nightly
        path: bin
    - name: Change bin permissions
      run: |
        chmod +x bin/wego-${{matrix.os}}-nightly
        ls -la bin
    - name: Set up ssh agent
      uses: webfactory/ssh-agent@v0.5.2
      with:
        ssh-private-key: ${{ secrets.WKP_EXAMPLE_ORG_SSH_KEY }}
    - name: Configure git settings
      run: |
        git config --global init.defaultBranch main
        git config --global user.email "test-user@weave.works"
        git config --global user.name "Testy McTestFace"
        git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    - name: Install Ginkgo binary
      run: go get -u github.com/onsi/ginkgo/ginkgo
    - name: User Acceptance Tests (Ubuntu)
      env:
        GITHUB_ORG: wkp-example-org
        GITHUB_TOKEN: "${{ secrets.WKP_EXAMPLE_ORG_KEY }}"
        GITHUB_KEY: "${{ secrets.WKP_EXAMPLE_ORG_SSH_KEY }}"
      run: |
        export WEGO_BIN_PATH=$(pwd)/bin/wego-${{matrix.os}}-nightly
        export CLUSTER_PROVIDER=gke
        export K8S_VERSION=1.19.1
        # cleanup the cluster
        $WEGO_BIN_PATH install | kubectl --ignore-not-found=true delete -f -
        $WEGO_BIN_PATH install --namespace test-namespace| kubectl --ignore-not-found=true delete -f -
        kubectl get all --all-namespaces -o wide
        ginkgo --reportFile=$(pwd)/test-results/acceptance-test-results.xml -v -tags=acceptance ./test/acceptance/test/...
  
  publish:
    if: success()
    needs: [test-eks, test-gke]
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Download tested wego binaries
      uses: actions/download-artifact@v2
      with:
        name: wego-binaries-${{matrix.os}}-nightly
        path: bin
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: publish nightly binaries to s3
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - run: |
        aws s3 cp bin/wego-${{matrix.os}}-nightly s3://weave-gitops/nightly/${{ steps.date.outputs.date }}/wego-${{matrix.os}}