name: release

on:
  pull_request_review:
    types:
      - submitted

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: weaveworks/wego-app

jobs:
  tag-release:
    if: github.event.review.state == 'approved' && startsWith(github.event.pull_request.head.ref, 'releases/')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Find release version
        id: release-version
        run: |
          version=$(echo ${{ github.event.pull_request.head.ref }} | cut -d'/' -f2)
          echo "::set-output name=version::$version"
      - name: Set tag
        run: |
          git config user.name weave-gitops-bot
          git config user.email weave-gitops-bot@weave.works
          git tag -a ${{ steps.release-version.outputs.version }} -m ${{ steps.release-version.outputs.version }}
          git push origin tag ${{ steps.release-version.outputs.version }}

  goreleaser:
    runs-on: ubuntu-latest
    needs: tag-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: |
          git fetch --prune --unshallow
          git fetch --tags -f
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.5
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.2
      - name: Set env var
        run: |
          make -B dependencies
          echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "FLUX_VERSION=$($(pwd)/tools/bin/stoml $(pwd)/tools/dependencies.toml flux.version)" >> $GITHUB_ENV
          echo "GORELEASER_PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))" >> $GITHUB_ENV
          echo "GORELEASER_CURRENT_TAG=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV
      - name: "Make All"
        run: make all
      - name: Check Git State
        run: git diff --no-ext-diff --exit-code
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: "${{ github.workspace }}/.github/changelog/changelog_configuration.json"
          outputFile: "${{ runner.temp }}/changelog.md"
          ignorePreReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Include brew publishing
        run: cat .goreleaser.brew.yml >> .goreleaser.yml
        if: ${{ !contains(github.event.inputs.version, '-') }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --rm-dist --skip-validate --release-notes=${{ runner.temp }}/changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.WEAVE_GITOPS_BOT_ACCESS_TOKEN }}
          BOT_TOKEN: ${{ secrets.WEAVE_GITOPS_BOT_ACCESS_TOKEN }}
          BRANCH: ${{ env.BRANCH }}
          FLUX_VERSION: ${{ env.FLUX_VERSION }}
          GORELEASER_PREVIOUS_TAG: ${{ env.GORELEASER_PREVIOUS_TAG }}
          GORELEASER_CURRENT_TAG: ${{ env.GORELEASER_CURRENT_TAG }}

  publish_npm_package:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16.13.2"
          registry-url: "https://npm.pkg.github.com"
          scope: "@weaveworks"
      - run: npm install
      - run: make ui-lib && cd dist && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-push-image:
    needs:
      - goreleaser
      - tag-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Unshallow
        run: |
          git fetch --prune --unshallow
          git fetch --tags -f
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.tag-release.outputs.version }}
            type=semver,pattern={{version}},value=${{ needs.tag-release.outputs.version }}
          flavor: |
            latest=true
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: gitops-server.dockerfile

  merge-pr:
    runs-on: ubuntu-latest
    needs:
      - tag-release
      - goreleaser
      - publish_npm_package
      - build-and-push-image
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: "Merge release"
        run: |
          curl --request PUT \
            --url https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/merge \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
                "merge_method": "merge"
              }'
