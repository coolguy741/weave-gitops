on:
  push:
    paths-ignore:
      - 'doc/**'
    branches:
      - main
  pull_request:
  workflow_dispatch:

name: run tests
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Install UI Deps
      run: make node_modules
    - name: Check Git State
      run: git diff --no-ext-diff --exit-code
    - name: Fake Install flux
      run: mkdir -p pkg/flux/bin && touch pkg/flux/bin/flux
    - name: Build UI Assets
      run: make cmd/gitops/ui/run/dist/index.html
    - name: Check Format
      run: make check-format
    - name: Run linters
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.42.1
        args: --timeout=600s
        skip-go-installation: true

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Clean
      run: make clean
    - name: build
      run: make gitops
    - name: Store gitops binaries
      uses: actions/upload-artifact@v2
      with:
          name: gitops-binaries
          path: bin
          retention-days: 1

  test:
    env:
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        GITLAB_ORG: ${{ secrets.GITLAB_ORG }}
        GITHUB_TOKEN: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}"
        KUBEBUILDER_ASSETS: ${{ github.workspace }}/kubebuilder/bin
    runs-on: ubuntu-latest
    steps:
    - name: Install lcov
      run:  sudo apt-get install -y lcov
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up ssh
      uses: ./.github/actions/setup-ssh
      with:
        github-ssh-private-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        gitlab-ssh-private-key: ${{ secrets.GITLAB_KEY }}
    - name: Install UI Deps
      run: npm ci
    - name: UI Deps Audit
      run: make ui-audit
    - name: Build UI Assets
      run: make cmd/gitops/ui/run/dist/main.js
    - name: Set up kubebuilder
      uses: fluxcd/pkg/actions/kubebuilder@main
    - name: Set up flux dir but let dependencies install flux
      run: mkdir -p pkg/flux/bin && tools/download-deps.sh $PWD/tools/dependencies.toml
    - name: Frontend Tests with Coverage
      run: make coverage/lcov.info
    - name: Unit Tests with Coverage
      run: make coverage/unittest.info
    - name: Integration Tests with Coverage
      run: make coverage/integrationtest.info
    - name: Merge Coverage Reports
      run: make merged.lcov
    - name: Coveralls
      uses: coverallsapp/github-action@v1.1.2
      with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: merged.lcov

  smoke-tests:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/run-acceptance-test
      with:
        result-prefix: 'smoke-'
        focus-or-skip: "--focus='SmokeTestShort'"
        github-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        github-token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
        gitlab-key: ${{ secrets.GITLAB_KEY }}
        gitlab-token: ${{ secrets.GITLAB_TOKEN }}
        gitlab-org: ${{ secrets.GITLAB_ORG }}
        artifacts-base-dir: "/tmp/gitops-test"

  smoke-tests-long:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/run-acceptance-test
      with:
        result-prefix: 'smoke-long-'
        focus-or-skip: "--focus='SmokeTestLong'"
        github-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        github-token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
        gitlab-key: ${{ secrets.GITLAB_KEY }}
        gitlab-token: ${{ secrets.GITLAB_TOKEN }}
        gitlab-org: ${{ secrets.GITLAB_ORG }}
        artifacts-base-dir: "/tmp/gitops-test"

  acceptance-tests-0:
    runs-on: ubuntu-latest
    needs: [lint, build]
    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/run-acceptance-test
      with:
        focus-or-skip: "--skip='Test1|Test2|Test3|SmokeTest|SmokeTestLong|UITest'"
        github-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        github-token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
        gitlab-key: ${{ secrets.GITLAB_KEY }}
        gitlab-token: ${{ secrets.GITLAB_TOKEN }}
        gitlab-org: ${{ secrets.GITLAB_ORG }}
        artifacts-base-dir: "/tmp/gitops-test"

  acceptance-tests-1:
    runs-on: ubuntu-latest
    needs: [lint, build]
    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/run-acceptance-test
      with:
        result-prefix: 'kustomize-'
        focus-or-skip: "--focus='Test1'"
        github-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        github-token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
        gitlab-key: ${{ secrets.GITLAB_KEY }}
        gitlab-token: ${{ secrets.GITLAB_TOKEN }}
        gitlab-org: ${{ secrets.GITLAB_ORG }}
        artifacts-base-dir: "/tmp/gitops-test"

  acceptance-tests-2:
    runs-on: ubuntu-latest
    needs: [lint, build]
    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/run-acceptance-test
      with:
        result-prefix: 'kustomize-multiple-'
        focus-or-skip: "--focus='Test2'"
        github-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        github-token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
        gitlab-key: ${{ secrets.GITLAB_KEY }}
        gitlab-token: ${{ secrets.GITLAB_TOKEN }}
        gitlab-org: ${{ secrets.GITLAB_ORG }}
        artifacts-base-dir: "/tmp/gitops-test"

  acceptance-tests-3:
    runs-on: ubuntu-latest
    needs: [lint, build]
    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/run-acceptance-test
      with:
        result-prefix: 'test3-'
        focus-or-skip: "--focus='Test3'"
        github-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        github-token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
        gitlab-key: ${{ secrets.GITLAB_KEY }}
        gitlab-token: ${{ secrets.GITLAB_TOKEN }}
        gitlab-org: ${{ secrets.GITLAB_ORG }}
        artifacts-base-dir: "/tmp/gitops-test"

  ui-tests:
    runs-on: ubuntu-latest
    needs: [lint, build]
    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/run-acceptance-test
      with:
        result-prefix: 'ui-test-'
        focus-or-skip: "--focus='UITest'"
        github-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
        github-token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
        gitlab-key: ${{ secrets.GITLAB_KEY }}
        gitlab-token: ${{ secrets.GITLAB_TOKEN }}
        gitlab-org: ${{ secrets.GITLAB_ORG }}
        artifacts-base-dir: "/tmp/gitops-test"

  library-integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25
      - name: Run Library Integration Test
        env:
          GITHUB_TOKEN: "${{ secrets.github_token }}"
        run: make lib-test
